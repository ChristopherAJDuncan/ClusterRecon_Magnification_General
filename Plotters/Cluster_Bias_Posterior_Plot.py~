
#Can also be used to Plot Combined Posteriors

import pylab as pl
import numpy as np

#Plotting Declarations
lwidth = 2.
fsize = 20.

Input_Value = [0.3, 0.725, 1.15, 1.575, 2.0]
Cluster_Labels = ['', '', '', '', '']


Posterior_Dir_Head = '/disk1/cajd/Size_Magnification/Bayesian_DM_Profile_Constraints_Output/SizeMag/Cluster_BiasCOMBO/'
Posterior_Filename = 'Bias_Combined_Posterior.dat'

#Posterior_Filename = '/disk1/cajd/Size_Magnification/Bayesian_DM_Profile_Constraints_Output/SizeOnly/COMBO/Bias/Bias_Combined_Posterior.dat'

#Posterior_Filename = '/disk1/cajd/Size_Magnification/Bayesian_DM_Profile_Constraints_Output/SizeMag/COMBO/Bias/Bias_Error_Run_CatID5/1/Posterior_per_Aperture.dat'

Posterior_Label = 'r_{200}'

Cluster_Colours = ['r', 'g', 'b', 'k', 'c']




f = pl.figure()
ax = f.add_subplot(111)
for i in range(1, len(Input_Value)+1):
    Posterior = np.genfromtxt(Posterior_Dir_Head+str(i)+'/'+Posterior_Filename)    
    ax.plot(Posterior[:,0], Posterior[:,1], color = Cluster_Colours[i-1], linewidth = lwidth)
    ax.plot((Input_Value[i-1],Input_Value[i-1]), ax.get_ylim(), color = Cluster_Colours[i-1], linestyle = '--', linewidth = lwidth, label = str(Input_Value[i-1]))


ax.set_xlim((0., 2.5))
#ax.set_xlim((np.amin(Input_Value)- 0.2, np.amax(Input_Value)+ 0.3))
ax.set_xlabel(r'$'+Posterior_Label+'$', fontsize = fsize)
ax.set_ylabel(r'$p('+Posterior_Label+')$', fontsize = fsize)
#ax.set_ylabel('Posterior', fontsize = fsize)

pl.legend(loc = 1)#1:UR, 2:UL, 9:UC
#pl.show()

output_name = 'Posterior_Plot.pdf'
pl.savefig(output_name,format = 'pdf',bbox_inches = 'tight', pad_inches = 0.6)
print 'Produced plot output to '+output_name
